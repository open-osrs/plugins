name: OpenOSRS - CI (PR)

on:
  pull_request:
    types: ['opened', 'edited', 'reopened', 'synchronize']

jobs:
  pr-lint:
    name: PR title
    runs-on: ubuntu-latest

    steps:
      - name: PR title lint
        if: github.event_name == 'pull_request'
        uses: seferov/pr-lint-action@v1.0.3
        with:
          title-regex: '^([\w-/]+): \w+'

  build:
    runs-on: ubuntu-latest
    name: Build

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/checkout@v1

      - uses: actions/checkout@v1
        with:
          repository: Owain94/runelite-extended
          ref: externals-rework

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Upload client artifacts to local maven
        run: ./gradlew publishToMavenLocal --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain

      - name: Building plugins
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain


  checkstyleMain:
    runs-on: ubuntu-latest
    name: Checkstyle main

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/checkout@v1

      - uses: actions/checkout@v1
        with:
          repository: Owain94/runelite-extended
          ref: externals-rework

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Upload client artifacts to local maven
        run: ./gradlew publishToMavenLocal --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain

      - name: Checking plugins code conventions (Main)
        run: ./gradlew checkstyleMain --console=plain

  checkstyleTest:
    runs-on: ubuntu-latest
    name: Checkstyle test

    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - uses: actions/checkout@v1

      - uses: actions/checkout@v1
        with:
          repository: Owain94/runelite-extended
          ref: externals-rework

      - uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable (client)
        run: chmod +x ./gradlew
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Assembling client
        run: ./gradlew assemble --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Building client
        run: ./gradlew build --stacktrace -x test -x checkstyleMain --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Upload client artifacts to local maven
        run: ./gradlew publishToMavenLocal --console=plain
        working-directory: /home/runner/work/plugins/runelite-extended

      - name: Make gradlew executable (plugins)
        run: chmod +x ./gradlew

      - name: Assembling plugins
        run: ./gradlew assemble --console=plain

      - name: Checking plugins code conventions (Test)
        run: ./gradlew checkstyleTest --console=plain

  approve:
    name: Approve
    needs: [build, checkstyleMain, checkstyleTest]
    runs-on: ubuntu-latest

    steps:
      - name: Approve pull request
        if: github.event_name == 'pull_request' && github.actor == 'OpenOSRS'
        uses: hmarr/auto-approve-action@v2.0.0
        with:
          github-token: ${{ secrets.Owain }}